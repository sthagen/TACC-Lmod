-- -*- lua -*-
local testName = "hidden"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 hidden
   ]],
   keywords = {testName },

   active   = true,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     export MODULEPATH=$(testDir)/mf

     remove_generated_lmod_files

     runLmod --version                         # 1
     runLmod --show_hidden avail               # 2

     runLmod load .system                      # 3
     runLmod load .a/.1                        # 4
     runLmod load .b/1.0                       # 5
     runLmod load  c/.1                        # 6
     runLmod list                              # 7

     runLmod purge                             # 8
     unsetMT
     export MODULEPATH=$(testDir)/mf2/top:$(testDir)/mf2/bottom
     export LMOD_TMOD_FIND_FIRST=1
     runLmod --show_hidden av                  # 9
     runLmod load B                            #10
     runLmod load A                            #11
     runLmod list                              #12

     unset  LMOD_TMOD_FIND_FIRST
     runLmod purge                             #13
     unsetMT
     export MODULEPATH=$(testDir)/mf3

     runLmod --show_hidden av



     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}

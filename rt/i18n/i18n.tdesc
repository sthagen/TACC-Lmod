-- -*- lua -*-
local testName = "i18n"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test i18n code
   ]],
   keywords = { testName },

   active = 1,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars

     remove_generated_lmod_files

     cp $(projectDir)/init/lmodrc.lua .lmodrc.lua

     runLmod --version                # 1
     runLmod avail                    # 2
     export LANG=es_ES
     runLmod avail                    # 3
     export LANG=de_DE
     runLmod avail                    # 4
     export LANG=fr_CA.UTF8
     runLmod avail                    # 5
     export LANG=pl
     runLmod avail                    # 6

     export MODULEPATH_ROOT=$(testDir)/mf
     export MODULEPATH=$MODULEPATH_ROOT/Core

     export LANG=zh
     runLmod load intel               # 6
     runLmod load gcc                 # 7
     export LANG=fr_CA.UTF8
     runLmod load unknown             # 8
     runLmod --help                   # 9



     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}

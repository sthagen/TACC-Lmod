-- -*- lua -*-
local testName = "mpath"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
	 Test mpath
   ]],
   keywords = {testName },

   active   = true,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     export MODULEPATH_ROOT=$(testDir)/mf
     export MODULEPATH=$MODULEPATH_ROOT/Core


     remove_generated_lmod_files

     runLmod --version                     # 1
     runLmod avail                         # 2
     MODULEPATH=$MODULEPATH_ROOT/RTM:$MODULEPATH
     runLmod avail                         # 3
     unsetMT
     MODULEPATH=$MODULEPATH_ROOT/Core
     runLmod avail                         # 4
     MODULEPATH=$MODULEPATH_ROOT/Core:$MODULEPATH_ROOT/RTM
     runLmod avail                         # 5
     runLmod load icc ifort                # 6
     runLmod unload icc                    # 7
     runLmod load icc                      # 8

     runLmod unuse $testDir/mf/Compiler/intel/18.0

     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}


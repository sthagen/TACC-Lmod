-- -*- lua -*-
local testName = "modulerc"

testdescript = {
   owner   = "rtm",
   product = "modules",
   description = [[
      Test modulerc
   ]],
   keywords = {testName },

   active = 1,
   testName = testName,
   job_submit_method = "INTERACTIVE",

   runScript = [[

     . $(projectDir)/rt/common_funcs.sh

     unsetMT
     initStdEnvVars
     numStep=0
     COUNT=0
     ORIG_HOME=`(cd $HOME; /bin/pwd)`
     HOME=`/bin/pwd`
     cacheDir=`userCacheDir`
 
     remove_generated_lmod_files myCacheDir fn spiderT.lua

     cp $(testDir)/dot.modulerc .modulerc

     export MODULEPATH_ROOT=$(testDir)/mf
     export MODULEPATH=$MODULEPATH_ROOT/Core
     export LMOD_TERM_WIDTH=500


     runLmod --version               # 1
     runLmod load intel              # 2
     runLmod list                    # 3
     runLmod load intel/15           # 4
     runLmod list                    # 5
     runLmod -t list                 # 6
     runLmod load a14                # 7
     runLmod list                    # 8
     runLmod load a13                # 9
     runLmod list                    #10
     runLmod load abinit/6           #11
     runLmod list                    #12
     runLmod load abinit/7           #13
     runLmod list                    #14
     runLmod load hidden/2.0         #15
     runLmod list                    #16
     runLmod -t avail                #17
     runLmod --show_hidden avail     #18
     export LMOD_SHORT_TIME=0
     runLmod avail                   #19
     cp $cacheDir/spiderT.*.lua ~/spiderT.lua
     unset LMOD_SHORT_TIME
     runLmod avail                   #20
     rm -rf $cacheDir

     cat > fn << EOF
$(outputDir)/cacheDir: $(outputDir)/last_update
EOF

     lua $(projectDir)/src/spiderCacheSupport.in.lua --descriptFn fn > .lmodrc.lua
     mkdir myCacheDir
     touch last_update
     buildSpiderT $MODULEPATH > myCacheDir/spiderT.lua
     runBase runSpiderCmd -o spiderT $MODULEPATH       #21
     runLmod avail                                     #22
     runLmod use  $(testDir)/mf2/Core                  #23
     runLmod spider dum                                #24

     unsetMT
     export MODULEPATH=$(testDir)/mf/Core:$(testDir)/mf3/Core
     runLmod load cluster                              #25

     rm .modulerc
     unsetMT
     export MODULEPATH=$(testDir)/mf4
     runLmod avail                                     #26

     cp $testDir/dot.modulerc .modulerc
     runLmod avail                                     #27
     runLmod --show_hidden avail                       #28
     runLmod load mpich a                              #29
     runLmod list                                      #30

     rm .modulerc
     export LMOD_MODULERC=$testDir/dot.modulerc
     runLmod avail                                     #31
     runLmod --show_hidden avail                       #32

     export LMOD_MODULERC=$testDir/dot.modulerc.lua
     runLmod avail                                     #33
     runLmod --show_hidden avail                       #34


     unset LMOD_MODULERC
     unsetMT
     export MODULEPATH=$(testDir)/mf5
     runLmod avail                                     #35

     unsetMT
     export MODULEPATH=$(testDir)/mf6:$(testDir)/mf7:$(testDir)/mf4
     runBase    runSpiderCmd -o spiderT  $MODULEPATH   #36
     runLmod avail                                     #37

     unsetMT
     export MODULEPATH=$(testDir)/mf7:$(testDir)/mf6:$(testDir)/mf4
     runBase    runSpiderCmd -o spiderT  $MODULEPATH   #38
     runLmod avail                                     #39

     unsetMT
     export MODULEPATH=$(testDir)/mf8
     runLmod    avail                                  #40
     runLmod -t avail                                  #41
     runLmod -t avail  compiler/intel/19.0             #42
     runLmod -t avail  compiler/intel/2019.5           #43

     unsetMT
     export MODULEPATH=$(testDir)/mf9/Core
     runLmod    avail                                  #44

     unsetMT
     export MODULEPATH_ROOT=$(testDir)/mf
     export MODULEPATH=$MODULEPATH_ROOT/Core
     export LMOD_MODULERC=$(testDir)/loop_modulerc_d.lua
     runLmod    avail                                  #45

     unsetMT
     export MODULEPATH_ROOT=$(testDir)/mf
     export MODULEPATH=$MODULEPATH_ROOT/Core
     export LMOD_MODULERC=$(testDir)/modulerc.d
     runLmod    avail                                  #46

     runLmod    purge                                  #47
     unsetMT
     rm -f .modulerc .modulerc.lua
     cp $(testDir)/dot.modulerc_defaults.lua .modulerc.lua
     export LMOD_MODULERC=$(testDir)/MRC/mainRC.lua
     export MODULEPATH_ROOT=$(testDir)/mfA
     export MODULEPATH=$MODULEPATH_ROOT/Core
     runLmod    avail                                  #48
     runLmod    load newDefaults                       #49
     runLmod    list                                   #50
     runLmod    avail                                  #51
     





     HOME=$ORIG_HOME
     cat _stdout.[0-9][0-9][0-9] > _stdout.orig
     joinBase64Results  -bash  _stdout.orig _stdout.new
     cleanUp _stdout.new out.txt

     cat _stderr.[0-9][0-9][0-9] > _stderr.orig
     cleanUp _stderr.orig err.txt

     rm -f results.csv
     wrapperDiff --csv results.csv $(testDir)/out.txt out.txt
     wrapperDiff --csv results.csv $(testDir)/err.txt err.txt
     testFinish -r $(resultFn) -t $(runtimeFn) results.csv
   ]],


   blessScript = [[
         # perform what is needed
   ]],

   tests = {
      { id='t1'},
   },

}
